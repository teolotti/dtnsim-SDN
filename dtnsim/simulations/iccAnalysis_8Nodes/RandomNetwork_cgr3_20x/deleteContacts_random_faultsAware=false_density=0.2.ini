#./dtnsim test_Ion_4Nodes_deleteContacts.ini -u Cmdenv -x dtnsim -g

[General]
result-dir = resultsRandom
user-interface = Tkenv
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

[Config dtnsim]
#network = dtnsim.dtnsim							
repeat = 10					
dtnsim.nodesNumber = 8	
num-rngs = 1
#seed-0-mt = ${runnumber}
#seed-1-mt = ${runnumber}
#seed-2-mt = ${runnumber}
#seed-3-mt = ${runnumber}
#seed-4-mt = ${runnumber}
#dtnsim.node[0].dtn.rng-0 = 0
#dtnsim.node[1].dtn.rng-0 = 1
#dtnsim.node[2].dtn.rng-0 = 2
#dtnsim.node[3].dtn.rng-0 = 3
#dtnsim.node[4].dtn.rng-0 = 4

seed-0-mt = ${runnumber}
dtnsim.central.rng-0 = 0

dtnsim.central.contactsFile = ${CP="contactPlan/0.2_0","contactPlan/0.2_1","contactPlan/0.2_2",\
"contactPlan/0.2_3","contactPlan/0.2_4","contactPlan/0.2_5",\
"contactPlan/0.2_6","contactPlan/0.2_7","contactPlan/0.2_8",\
"contactPlan/0.2_9"}

dtnsim.central.faultsAware = ${faultsAware=false}

# end value must be less or equal to contacts quantity
dtnsim.central.deleteNContacts = ${deleteNContacts=0..110 step 11}
dtnsim.central.useCentrality = false

#dtnsim.node[*].dtn.routing = "cgrIon350"
#dtnsim.node[*].dtn.routing = "cgrModel350_3"
#dtnsim.node[*].dtn.routing = "cgrModelYen"
dtnsim.node[*].dtn.routing = "cgrModelRev17"
#dtnsim.node[*].dtn.routingType = "volumeAware:allContacts"

#dtnsim.logger.contactsFile = "contactPlan/0.2_0"
#dtnsim.node[*].dtn.saveBundleMap = true
#dtnsim.logger.saveTopology = true
#dtnsim.logger.saveFlows = true
#dtnsim.logger.saveLpFlows = true

include traffic.ini   

dtnsim.node[*].**.result-recording-modes = -vector








