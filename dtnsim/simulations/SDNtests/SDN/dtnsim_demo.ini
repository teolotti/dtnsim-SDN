[General]
network = src.dtnsim										
outputscalarmanager-class = omnetpp::envir::SqliteOutputScalarManager
outputvectormanager-class = omnetpp::envir::SqliteOutputVectorManager
repeat = 1
allow-object-stealing-on-deletion = true
record-eventlog = false

**.scalar-recording = true
**.vector-recording = true

# Simulation end time
sim-time-limit = 1000s

# Nodes quantity (identifiers (EiDs) matches their index, EiD=0 is ignored)			
dtnsim.nodesNumber = 20	
dtnsim.node[2..19].icon = "satellite"
dtnsim.node[1].icon = "antennatower"
dtnsim.node[20].icon = "antennatower"

# Nodes's failure rates
# dtnsim.node[*].fault.enable = false
# dtnsim.node[*].fault.faultSeed = ${repetition}*10
# dtnsim.node[*].fault.meanTTF = 20s
# dtnsim.node[*].fault.meanTTR = 5s

# Net Layer (available routing: direct, cgrModel350, cgrModelRev17, cgrModel350_Hops, cgrModel350_2Copies)
dtnsim.node[*].dtn.routing = "SDN"
dtnsim.central.contactsFile = "contactPlan/dtnsim_demo.txt"
dtnsim.node[*].dtn.routingType = "weight:arrivalTime"
#dtnsim.node[*].dtn.printRoutingDebug = true

# App Layer (comma separeted strings for different traffic generators)			
dtnsim.node[1].app.enable=true			
dtnsim.node[1].app.bundlesNumber="1,1,1"
dtnsim.node[1].app.start="1,20,100"				 
dtnsim.node[1].app.destinationEid="20,20,20"
dtnsim.node[1].app.size="100,100,100"